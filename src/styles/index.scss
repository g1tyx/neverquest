@import "~animate.css";
@import "bootstrap-theme";
@import "~bootstrap/scss/bootstrap";
@import "~react-circular-progressbar/dist/styles";

::selection {
  background: $gray-600;
  color: white;
}

body {
  user-select: none;
}

h6 {
  font-variant: all-petite-caps;
}

input {
  &.form-control-plaintext {
    cursor: pointer;
    outline: none;
  }

  &.hover-grow:hover:not(:focus) {
    transform: scale(1.1);
    transform-origin: center left;
    transition: transform 0.5s;
  }
}

select {
  cursor: pointer;
}

small:empty {
  display: none;
}

svg {
  /* stylelint-disable-next-line selector-class-pattern */
  &.CircularProgressbar {
    max-width: 60px;

    /* stylelint-disable-next-line selector-class-pattern */
    .CircularProgressbar-path {
      stroke: $dark;
    }

    /* stylelint-disable-next-line selector-class-pattern */
    .CircularProgressbar-text {
      fill: $dark;
      font-size: 18px;
    }

    /* stylelint-disable-next-line selector-class-pattern */
    .CircularProgressbar-trail {
      stroke: $body-secondary-bg;
    }
  }

  &.icon-image {
    display: block;
    fill: currentcolor;
    width: 40px;

    &.small {
      width: 20px;
    }

    &.stencilled {
      filter: drop-shadow(0 0 2px rgb(0 0 0));
    }
  }
}

td.text-end > .hstack {
  justify-content: end;
}

.accordion-button {
  box-shadow: none !important;
}

.mastery-display span {
  width: max-content;
}

.floating-text {
  z-index: 100;

  strong {
    text-shadow:
      -1px 1px 0 white,
      1px 1px 0 white,
      1px -1px 0 white,
      -1px -1px 0 white;
  }
}

.form-check {
  display: flex;
  gap: 0.8rem;
  align-items: center;

  .form-check-input,
  .form-check-label {
    cursor: pointer;
  }

  .form-check-input {
    margin-top: initial;
  }
}

.hstack.gap-1 {
  gap: 0.35rem !important;
}

.vstack {
  align-self: initial;
}

.journal,
.journal .tab-content,
.journal .tab-pane.active,
.journal .tab-pane > .vstack {
  display: flex;
  flex-direction: column;
  overflow-y: hidden;
}

.labelled-progress {
  &.no-transitions .progress-bar {
    transition: none;
  }

  > small {
    text-shadow:
      -1px 1px 1px var(--bs-gray-900),
      1px 1px 1px var(--bs-gray-900),
      1px -1px 1px var(--bs-gray-900),
      -1px -1px 1px var(--bs-gray-900);
  }
}

.overlay-offcanvas {
  z-index: calc($zindex-offcanvas + 1);
}

.overlay-modal-backdrop {
  z-index: calc($zindex-modal-backdrop + 1);
}

// Workaround for https://github.com/react-bootstrap/react-bootstrap/issues/6563
.popover,
.tooltip {
  position: fixed;
}

// Tooltip doesn't have a box-shadow variable, and $popover-box-shadow doesn't control this way.
.popover.show,
.tooltip.show > .tooltip-inner {
  box-shadow: 0 0 4px 1px rgb(0 0 0 / 20%);
}

.table-details {
  tr > td:nth-child(2) {
    vertical-align: bottom;
  }
}

.text-blue {
  color: $blue;
}

.text-orange {
  color: $orange;
}

.text-yellow {
  color: $yellow;
}
